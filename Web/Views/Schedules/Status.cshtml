@{
    ViewData["Title"] = "Upload Resource Status";
}

<div class="container d-flex justify-content-center align-items-start min-vh-100 pt-5">
    <div class="card p-4 shadow-lg w-50">
        <h4 class="text-center mb-4">Upload Resource Status Excel File</h4>
        <br>

        @if (!string.IsNullOrEmpty(ViewBag.Message))
        {
            <div class="alert alert-info text-center">
                @ViewBag.Message
            </div>
        }

        <form id="uploadFormStatus" enctype="multipart/form-data">
            <div class="mb-3">
                <input type="file" class="form-control" id="fileStatus" name="resource_status_excel_file" />
            </div>
            <br />
            <div class="d-grid">
                <button type="button" class="btn btn-primary" onclick="uploadResourceStatusFile()">Upload</button>
            </div>
            <div id="uploadStatus" class="mt-3 text-center text-info" style="display: none;">
                ⏳ Uploading... Please wait.
            </div><br />
        </form>
    </div>
</div>

<script>
    async function uploadResourceStatusFile() {
        const form = document.getElementById('uploadFormStatus');
        const formData = new FormData(form);
        const statusDiv = document.getElementById('uploadStatus');

        const file = formData.get("resource_status_excel_file");
        if (!file) {
            alert("Please select a Resource Status Excel file.");
            return;
        }

        // Show the loading message
        statusDiv.style.display = "block";
        statusDiv.textContent = "⏳ Uploading... Please wait.";

        try {
            const response = await fetch('http://127.0.0.1:8000/api/upload_resource_status_xlsx', {
                method: 'POST',
                headers: {
                    'Accept': 'application/json'
                },
                body: formData
            });

            if (response.ok) {
                const result = await response.json();
                console.log('✅ Success:', result);
                alert("✅ Resource Status Excel uploaded successfully.");
            } else {
                const err = await response.text();
                console.error('❌ Upload failed:', err);
                alert("🚫 Upload failed. Check console for error.");
            }
        } catch (error) {
            console.error('❌ Fetch error:', error);
            alert("🚫 Upload failed. Network or CORS issue?");
        } finally {
            // Hide the loading message
            statusDiv.style.display = "none";
        }
    }
</script>
